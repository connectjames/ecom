imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    images_directory: '%kernel.root_dir%/../web/assets/images'
    images_preview_directory: '%kernel.root_dir%/../web/assets/images/tmp'
    liip_imagine.jpegoptim.binary: /usr/bin/jpegoptim

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    translator: { fallbacks: [en] }

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
      - bootstrap_3_layout.html.twig
    globals:
          sagepay_vendor: "%sagepay_key%"
          sagepay_key: "%sagepay_key%"
          sagepay_password: "%sagepay_password%"
          company_name: "%company_name%"
          company_address: "%company_address%"
          company_email: "%company_email%"
          company_number: "%company_number%"
          company_number_href: "%company_number_href%"
          company_title: "%company_title%"
          company_keywords: "%company_keywords%"
          company_description: "%company_description%"
          social_facebook: "%social_facebook%"
          social_twitter: "%social_twitter%"
          social_gplus: "%social_gplus%"
          social_linkedin: "%social_linkedin%"
          ga_tracking: "%ga_tracking%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql:
            string_functions:
                DATE_FORMAT: DoctrineExtensions\Query\Mysql\DateFormat
                MONTH: DoctrineExtensions\Query\Mysql\Month
                MONTHNAME: DoctrineExtensions\Query\Mysql\MonthName
                NOW: DoctrineExtensions\Query\Mysql\Now
                YEAR: DoctrineExtensions\Query\Mysql\Year

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    port:      25
    spool:
        type: file
        path: '%kernel.root_dir%/spool'

knp_paginator:
    page_range:                 5          # default page range used in pagination control
    default_options:
        page_name:              page       # page query parameter name
        sort_field_name:        sort       # sort field query parameter name
        sort_direction_name:    direction  # sort direction query parameter name
        sort_direction_name:    direction  # sort direction query parameter name
        distinct:               true       # ensure distinct results, useful when ORM queries are using GROUP BY statements
        filter_field_name:      search
        filter_value_name:      searchValue
    template:
        pagination: KnpPaginatorBundle:Pagination:twitter_bootstrap_v3_pagination.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig                         # sort link template

stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            sluggable: true

liip_imagine:
    filter_sets:

        # name our filter set "thumbnail"
        thumbnail:
            quality : 100

            filters:

                thumbnail:

                    size: [70, 70]

                    mode: outbound
            post_processors:
                jpegoptim: { strip_all: true, max: 70, progressive: true }
        # name our filter set "basket"
        basket:
            quality : 100

            filters:

                thumbnail:

                    size: [110, 110]

                    mode: outbound
            post_processors:
                jpegoptim: { strip_all: true, max: 70, progressive: true }
        # name our filter set "featured"
        featured:
            quality : 100

            filters:

                thumbnail:

                    size: [180, 180]

                    mode: outbound
            post_processors:
                jpegoptim: { strip_all: true, max: 70, progressive: true }
        # name our filter set "relatedProduct"
        relatedProduct:
            quality : 100

            filters:

                thumbnail:

                    size: [300, 300]

                    mode: outbound
            post_processors:
                jpegoptim: { strip_all: true, max: 70, progressive: true }
        # name our filter set "product"
        product:
            quality : 100

            filters:

                # use and setup the "downscale" filter
                downscale:

                    # input 3000x3000px -> output 1000x1000px
                    max: [1000, 1000]
            post_processors:
                jpegoptim: { strip_all: true, max: 70, progressive: true }
        # name our filter set "category"
        category:
            quality : 100

            filters:

                # use and setup the "downscale" filter
                downscale:

                    # input 3000x3000px -> output 1000x1000px
                    max: [1000, 1000]
            post_processors:
                jpegoptim: { strip_all: true, max: 70, progressive: true }

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

zenstruck_redirect:
    redirect_class: AppBundle\Entity\Redirect
    not_found_class: AppBundle\Entity\NotFound
    model_manager_name: ~

    # When enabled, when a redirect is updated or created, the NotFound entites with a matching path are removed.
    remove_not_founds: true

gregwar_captcha: ~